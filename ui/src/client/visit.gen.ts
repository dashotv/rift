// Code generated by github.com/dashotv/golem. DO NOT EDIT.
import { Setting, riftClient } from './client.gen';
import { Visit } from './models.gen';

export interface VisitIndexRequest {
  page: number;
  limit: number;
}
export interface VisitIndexResponse extends Response {
  result: Visit[];
  total: number;
}
export interface VisitCreateRequest {
  subject: Visit;
}
export interface VisitCreateResponse extends Response {
  result: Visit;
}
export interface VisitShowRequest {
  id: string;
}
export interface VisitShowResponse extends Response {
  result: Visit;
}
export interface VisitUpdateRequest {
  id: string;
  subject: Visit;
}
export interface VisitUpdateResponse extends Response {
  result: Visit;
}
export interface VisitSettingsRequest {
  id: string;
  setting: Setting;
}
export interface VisitSettingsResponse extends Response {
  result: Visit;
}
export interface VisitDeleteRequest {
  id: string;
}
export interface VisitDeleteResponse extends Response {
  result: Visit;
}

export const VisitIndex = async (params: VisitIndexRequest) => {
  const response = await riftClient.get(`/visit/?page=${params.page}&limit=${params.limit}`);
  return response.data as VisitIndexResponse;
};
export const VisitCreate = async (params: VisitCreateRequest) => {
  const response = await riftClient.post(`/visit/?`, params.subject);
  return response.data as VisitCreateResponse;
};
export const VisitShow = async (params: VisitShowRequest) => {
  const response = await riftClient.get(`/visit/${params.id}?`);
  return response.data as VisitShowResponse;
};
export const VisitUpdate = async (params: VisitUpdateRequest) => {
  const response = await riftClient.put(`/visit/${params.id}?`, params.subject);
  return response.data as VisitUpdateResponse;
};
export const VisitSettings = async (params: VisitSettingsRequest) => {
  const response = await riftClient.patch(`/visit/${params.id}?`, params.setting);
  return response.data as VisitSettingsResponse;
};
export const VisitDelete = async (params: VisitDeleteRequest) => {
  const response = await riftClient.delete(`/visit/${params.id}?`);
  return response.data as VisitDeleteResponse;
};
