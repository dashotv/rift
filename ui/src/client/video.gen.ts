// Code generated by github.com/dashotv/golem. DO NOT EDIT.
import { Setting, riftClient } from './client.gen';
import { Video } from './models.gen';


export interface VideoIndexRequest {
  page: number;
  limit: number;
}
export interface VideoIndexResponse extends Response {
  result: Video[];
  total: number;
}
export interface VideoCreateRequest {
  subject: Video;
}
export interface VideoCreateResponse extends Response {
  result: Video;
}
export interface VideoShowRequest {
  id: string;
}
export interface VideoShowResponse extends Response {
  result: Video;
}
export interface VideoUpdateRequest {
  id: string;
  subject: Video;
}
export interface VideoUpdateResponse extends Response {
  result: Video;
}
export interface VideoSettingsRequest {
  id: string;
  setting: Setting;
}
export interface VideoSettingsResponse extends Response {
  result: Video;
}
export interface VideoDeleteRequest {
  id: string;
}
export interface VideoDeleteResponse extends Response {
  result: Video;
}

export const VideoIndex = async (params: VideoIndexRequest) => {
  const response = await riftClient.get(`/video/?page=${params.page}&limit=${params.limit}`);
  return response.data as VideoIndexResponse;
};
export const VideoCreate = async (params: VideoCreateRequest) => {
  const response = await riftClient.post(`/video/?`, params.subject);
  return response.data as VideoCreateResponse;
};
export const VideoShow = async (params: VideoShowRequest) => {
  const response = await riftClient.get(`/video/${params.id}?`);
  return response.data as VideoShowResponse;
};
export const VideoUpdate = async (params: VideoUpdateRequest) => {
  const response = await riftClient.put(`/video/${params.id}?`, params.subject);
  return response.data as VideoUpdateResponse;
};
export const VideoSettings = async (params: VideoSettingsRequest) => {
  const response = await riftClient.patch(`/video/${params.id}?`, params.setting);
  return response.data as VideoSettingsResponse;
};
export const VideoDelete = async (params: VideoDeleteRequest) => {
  const response = await riftClient.delete(`/video/${params.id}?`);
  return response.data as VideoDeleteResponse;
};
